/* normalize.css v2.1.2 | MIT License | git.io/normalize */
/* normalize.scss v2.1.2 | MIT/GPLv2 License | bit.ly/normalize-with-compass */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address styling not present in IE 8/9.
 */
[hidden] {
  display: none; }

/* ==========================================================================
   Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 * 3. Correct text resizing oddly in IE 6/7 when body `font-size` is set using
 *    `em` units.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* ==========================================================================
   Links
   ========================================================================== */
/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* ==========================================================================
   Typography
   ========================================================================== */
/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  /* Set the font-size and line-height while keeping a proper vertical rhythm. */
  font-size: 2em;
  /* Set 1 unit of vertical rhythm on the top and bottom margins. */
  margin-top: 0.75em;
  margin-bottom: 0.75em; }

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em; }

/**
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap; }

/**
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* ==========================================================================
   Lists
   ========================================================================== */
/* ==========================================================================
   Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0; }

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* ==========================================================================
   Figures
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0; }

/* ==========================================================================
   Forms
   ========================================================================== */
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  margin: 0 2px;
  /* Apply borders and padding that keep the vertical rhythm. */
  border-color: #c0c0c0;
  border-top-width: 0.0625em;
  border-top-style: solid;
  padding-top: 0.4625em;
  border-bottom-width: 0.0625em;
  border-bottom-style: solid;
  padding-bottom: 0.9125em;
  border-left-width: 0.0625em;
  border-left-style: solid;
  padding-left: 0.875em;
  border-right-width: 0.0625em;
  border-right-style: solid;
  padding-right: 0.875em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Correct alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 * 4. Improve appearance and consistency with IE 6/7.
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 * 4. Remove inner spacing in IE 7 without affecting normal text inputs.
 *    Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 * 3. Remove excess padding in IE 7.
 *    Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* ==========================================================================
   Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

a {
  outline: 0 !important;
  text-decoration: none; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/*  Syntax Quick Reference
  --------------------------
  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)
  span($ratio: 1, $offset: 0)
  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)
  unshift()
  edit()
  center($max_width: 1410px, $pad: 0)
  stack($pad: 0, $align: false)
  unstack()
  align($direction: both)
  cf()
*/
/**
 * Grid settings.
 * All values are defaults and can therefore be easily overidden.
 */
/**
 * List functions courtesy of the wonderful folks at Team Sass.
 * Check out their awesome grid: Singularity.
 */
/**
 * Get  percentage from a given ratio.
 * @param {number} [$ratio=1] - The column ratio of the element.
 * @returns {number} - The percentage value.
 */
/**
 * Work out the column widths based on the ratio and gutter sizes.
 * @param {number} [$ratios=1] - The column ratio of the element.
 * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.
 * @returns {list} $width $gutter - A list containing the with and gutter for the element.
 */
/**
 * Get the set layout direction for the project.
 * @returns {string} $direction - The layout direction.
 */
/**
 * Replace a specified list value with a new value (uses built in set-nth() if available)
 * @param {list} $list - The list of values you want to alter.
 * @param {number} $index - The index of the list item you want to replace.
 * @param {*} $value - The value you want to replace $index with.
 * @returns {list} $list - The list with the value replaced or removed.
 * @warn if an invalid index is supplied.
 */
/**
 * Reverse a list (progressively enhanced for Sass 3.3)
 * @param {list} $list - The list of values you want to reverse.
 * @returns {list} $result - The reversed list.
 */
/**
 * Get the opposite direction to a given value.
 * @param {string} $dir - The direction you want the opposite of.
 * @returns {string} - The opposite direction to $dir.
 * @warn if an incorrect string is provided.
 */
/**
 * Style an element as a column with a gutter.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.
 * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column mixin.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Get the width of a column and nothing else.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Get the gutter size of a column and nothing else.
 * @param {number} [ratios=1] - A width relative to its container as a fraction.
 * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column-width function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * An alias for the column-gutter function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Style an element as a column without any gutters for a seamless row.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.
 * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.
 */
/**
 * Reorder columns without altering the HTML.
 * @param {number} [$ratios=0] - Specify how far along you want the element to move.
 * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Reset an element that has had shift() applied to it.
 */
/**
 * View the grid and its layers for easy debugging.
 * @param {string} [$color=black] - The background tint applied.
 * @param {boolean} [$important=false] - Whether to apply the style as !important.
 */
/**
 *  Alias for edit().
 */
/**
 * Horizontally center an element.
 * @param {number} [$max-width=1410px] - The max width the element can be.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 */
/**
 * Uncenter an element.
 */
/**
 * Stack an element so that nothing is either side of it.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 * @param {boolean/string} [$align=false] - Specify the text align for the element.
 */
/**
 * Unstack an element.
 */
/**
 * Center an element on either or both axes.
 * @requires A parent container with relative positioning.
 * @param {string} [$direction=both] - Specify which axes to center the element on.
 */
/**
 * Apply a clearfix to an element.
 */
.ico-menu {
  position: relative; }

.ico-menu:before {
  content: "";
  position: absolute;
  left: 0;
  top: 5px;
  width: 20px;
  height: 2px;
  background: cyan;
  box-shadow: 0 4px 0 0 cyan, 0 8px 0 0 cyan; }

html {
  font-size: 87.5%;
  line-height: 0.57143em; }

body {
  font-family: "Open Sans", sans-serif; }

body {
  background-color: #e7e7e7;
  overflow: hidden; }

.right {
  float: right; }

.settings__group {
  border-bottom: 1px solid #ddd;
  float: left;
  margin-bottom: 1.14286em;
  padding-bottom: 0.57143em;
  width: 100%; }

.settings__group--last {
  border-bottom: 0; }

.settings__left-column {
  border-right: 1px solid #ddd;
  bottom: 0;
  left: 0;
  padding: 1.14286em;
  position: absolute;
  top: 20px;
  z-index: 2;
  width: 17.14286em; }

.settings__right-column {
  bottom: 0;
  left: 0;
  top: 20px;
  padding-left: 18.28571em;
  position: absolute;
  width: 100%;
  z-index: 1; }

.settings__block {
  clear: both;
  float: left;
  margin-bottom: 0.57143em;
  width: 100%; }

.settings input[type='text'] {
  font-family: "PT Mono";
  -webkit-transition: background-color 0.3s ease;
          transition: background-color 0.3s ease;
  background-color: #e7e7e7;
  border: 0;
  float: left;
  outline: 0;
  height: 1.71429em;
  padding-left: 5px; }

.settings input[type='text']:focus, .settings input[type='text']:hover {
  background-color: #c8ffff; }

.settings__readonly {
  background-color: white;
  border: 1px solid white;
  float: left;
  padding: 8px 5px 7px 5px;
  width: 100%;
  word-break: break-all; }

.settings .rules canvas {
  background-color: #ddd;
  border-left: 1px solid #ddd;
  border-top: 1px solid #ddd;
  margin-bottom: 8px;
  margin-right: 10px;
  -webkit-transition: background-color 0.3s ease, border-color 0.3s ease;
          transition: background-color 0.3s ease, border-color 0.3s ease; }

.settings .rules canvas:hover {
  background-color: #c8ffff;
  border-color: #c8ffff; }

.scrollable {
  bottom: 0;
  height: 100%;
  overflow-y: scroll;
  padding-right: 1.14286em;
  position: relative; }

.scrollable__inner {
  height: auto;
  overflow: scroll;
  padding-top: 1.14286em;
  position: relative; }

.scrollable__push {
  bottom: 0;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0; }

.scrollable::-webkit-scrollbar {
  width: 10px; }

.scrollable::-webkit-scrollbar-track {
  background-color: #ffc8ff; }

.scrollable::-webkit-scrollbar-thumb {
  background-color: magenta; }

.settings .rules canvas:hover {
  cursor: pointer; }

.label {
  position: relative;
  height: 1.71429em; }

.label__inner {
  position: absolute;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  top: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%); }

.settings label {
  color: #666;
  display: block;
  font-size: 0.85em;
  margin-bottom: 0.57143em; }

.range {
  position: relative;
  height: 1.71429em; }

.range__input {
  position: absolute;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  top: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  -webkit-appearance: none;
  background-color: #e7e7e7;
  border: 0;
  height: 12px;
  padding: 0;
  -webkit-transition: background 0.3s ease, border 0.3s ease;
          transition: background 0.3s ease, border 0.3s ease;
  width: 100%; }

.range__input:focus {
  outline: none;
  border: 0; }

::-moz-focus-outer {
  border: 0; }

.range__input::-moz-range-track {
  opacity: 0; }

.range__input::-webkit-slider-thumb {
  -webkit-appearance: none;
  background: #797979;
  border-radius: 0;
  border: 0;
  height: 12px;
  -webkit-transition: background 0.3s ease, border 0.3s ease;
          transition: background 0.3s ease, border 0.3s ease;
  width: 12px; }

.range__input::-moz-range-thumb {
  background: #797979;
  border-radius: 0;
  border: 0;
  height: 12px;
  transition: background 0.3s ease, border 0.3s ease;
  width: 12px; }

.range__input::-ms-thumb {
  background: #797979;
  border-radius: 0;
  border: 0;
  height: 12px;
  transition: background 0.3s ease, border 0.3s ease;
  width: 12px; }

.range__input:hover {
  cursor: pointer;
  background-color: #c8ffff; }

.range__input:hover::-webkit-slider-thumb,
.range__input:focus::-webkit-slider-thumb {
  background-color: cyan; }

.button {
  font-size: 0.85714em;
  line-height: 1.33333em;
  background-color: #aaffff;
  border: 0;
  border-bottom: 2px solid cyan;
  color: #666;
  height: 2.28571em;
  text-align: center !important;
  -webkit-transition: background-color 0.3s ease;
          transition: background-color 0.3s ease; }

.button:focus {
  outline: 0; }

.button.button--magenta {
  background-color: #ffaaff;
  border-color: magenta; }

.button.button--magenta:hover {
  background-color: #ffc8ff; }

.button:active {
  background-color: #aaffff;
  border-top: 3px solid white;
  border-bottom: 0; }

.button:hover {
  background-color: #c8ffff; }

.js-resizable {
  background-color: white;
  bottom: 0;
  height: 300px;
  overflow: hidden;
  padding-top: 20px;
  position: fixed;
  width: 100%; }

.js-resizable-bar {
  background-color: #c8ffff;
  cursor: ns-resize;
  height: 20px;
  position: absolute;
  top: 0;
  -webkit-transition: background-color 0.3s ease;
          transition: background-color 0.3s ease;
  width: 100%;
  z-index: 3; }

.js-resizable-wrapper {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 100%;
  margin-left: 0%;
  margin-right: 0%;
  padding-top: 17.14286em; }
  .js-resizable-wrapper:before, .js-resizable-wrapper:after {
    content: '';
    display: table; }
  .js-resizable-wrapper:after {
    clear: both; }

.js-resizable-animate {
  -webkit-transition: height 0.3s ease;
          transition: height 0.3s ease; }

.js-resizable-close {
  width: 20px;
  height: 20px;
  float: right;
  position: relative; }

.js-resizable-close:hover {
  cursor: pointer; }

.js-resizable-grab {
  position: absolute;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 30px;
  height: 20px; }

.js-resizable--open .resizable-arrow {
  position: absolute;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top: 6px solid cyan;
  height: 0;
  width: 0; }

.js-resizable--closed .resizable-arrow {
  position: absolute;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  border-bottom: 6px solid cyan;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  height: 0;
  width: 0; }

.col-1 {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 100%;
  margin-left: 0%;
  margin-right: 3%; }
  .col-1:before, .col-1:after {
    content: '';
    display: table; }
  .col-1:after {
    clear: both; }
  .col-1:last-child {
    margin-right: 0%; }

.col-2 {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 47.5%;
  margin-left: 0%;
  margin-right: 5%; }
  .col-2:before, .col-2:after {
    content: '';
    display: table; }
  .col-2:after {
    clear: both; }
  .col-2:last-child {
    margin-right: 0%; }

.col-2.col-2--right {
  float: right; }
